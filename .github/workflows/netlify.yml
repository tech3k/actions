name: Netlify Deployment
on:
  workflow_call:
    secrets:
      NETLIFY_AUTH_TOKEN:
        required: true
      NETLIFY_SITE_ID:
        required: true
      NETLIFY_SITE_STAGING_ID:
        required: true

jobs:
  Setup:
    name: Setup Repository
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    outputs:
      cachepath: ${{ steps.generate_cache_path.outputs.cachepath }}
    steps:
      - name: Checkout Latest Version
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v2
      - name: Checkout Latest Version (PR)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Generate Cache Path
        id: generate_cache_path
        run: echo "::set-output name=cachepath::${{ runner.os }}-${{ github.sha }}-${{ github.run_attempt }}-yarn-${{ hashFiles('**/yarn.lock') }}"
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ steps.generate_cache_path.outputs.cachepath }}
      - name: Install Dependencies
        run: yarn install

  Test:
    name: Run all tests
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ needs.Setup.outputs.cachepath }}
      - name: Test
        run: yarn test

  Build:
    name: Build Website
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ needs.Setup.outputs.cachepath }}
      - name: Build
        run: yarn build

  Publish:
    name: Publish to Netlify
    runs-on: ubuntu-latest
    environment:
      name: Deploy
      url: ${{ steps.deployment_status.outputs.url }}
    needs:
      - Setup
      - Test
      - Build
    steps:
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ needs.Setup.outputs.cachepath }}
      - name: Publish
        id: netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_STAGING_ID }}
      - name: Update Deployment Status
        if: ${{ success() }}
        id: deployment_status
        run: echo "::set-output name=url::${{ steps.netlify.outputs.NETLIFY_URL }}"
